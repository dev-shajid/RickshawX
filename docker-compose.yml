version: '3.8'

services:
  # Infrastructure Services
  mongodb:
    image: mongo:7.0
    container_name: rickshawx-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - rickshawx-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 2m        # Check every 2 minutes instead of 30s
      timeout: 10s

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rickshawx-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
    networks:
      - rickshawx-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Microservices
  user-service:
    build:
      context: ./backend/user
      dockerfile: Dockerfile
    container_name: rickshawx-user-service
    restart: unless-stopped
    ports:
      - "4001:4001"
    environment:
      - NODE_ENV=production
      - MONGO_URL=mongodb://mongodb:27017/user-service
      - JWT_SECRET=your_jwt_secret
      - RABBIT_URL=amqp://rabbitmq:5672
      - BASE_URL=http://main-service:4000
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - rickshawx-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  captain-service:
    build:
      context: ./backend/captain
      dockerfile: Dockerfile
    container_name: rickshawx-captain-service
    restart: unless-stopped
    ports:
      - "4002:4002"
    environment:
      - NODE_ENV=production
      - MONGO_URL=mongodb://mongodb:27017/captain-service
      - JWT_SECRET=your_jwt_secret
      - RABBIT_URL=amqp://rabbitmq:5672
      - BASE_URL=http://main-service:4000
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - rickshawx-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  admin-service:
    build:
      context: ./backend/admin
      dockerfile: Dockerfile
    container_name: rickshawx-admin-service
    restart: unless-stopped
    ports:
      - "4004:4004"
    environment:
      - NODE_ENV=production
      - MONGO_URL=mongodb://mongodb:27017/admin-service
      - JWT_SECRET=your_jwt_secret
      - RABBIT_URL=amqp://rabbitmq:5672
      - BASE_URL=http://main-service:4000
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - rickshawx-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ride-service:
    build:
      context: ./backend/ride
      dockerfile: Dockerfile
    container_name: rickshawx-ride-service
    restart: unless-stopped
    ports:
      - "4003:4003"
    environment:
      - NODE_ENV=production
      - MONGO_URL=mongodb://mongodb:27017/ride-service
      - JWT_SECRET=your_jwt_secret
      - RABBIT_URL=amqp://rabbitmq:5672
      - BASE_URL=http://main-service:4000
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      user-service:
        condition: service_healthy
      captain-service:
        condition: service_healthy
      admin-service:
        condition: service_healthy
    networks:
      - rickshawx-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  main-service:
    build:
      context: ./backend/main
      dockerfile: Dockerfile
    container_name: rickshawx-main-service
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
    depends_on:
      user-service:
        condition: service_healthy
      captain-service:
        condition: service_healthy
      ride-service:
        condition: service_healthy
      admin-service:
        condition: service_healthy
    networks:
      - rickshawx-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  rabbitmq_data:
    driver: local
  rabbitmq_logs:
    driver: local

networks:
  rickshawx-network:
    driver: bridge